package zhou.yi.leetCode.easy5;

/**
 * @Author: XiaoLang
 * @Date: 2019/4/23 16:43
 * 颠倒给定的 32 位无符号整数的二进制位。
 * <p>
 * <p>
 * <p>
 * 示例 1：
 * <p>
 * 输入: 00000010100101000001111010011100
 * 输出: 00111001011110000010100101000000
 * 解释: 输入的二进制串 00000010100101000001111010011100 表示无符号整数 43261596，
 * 因此返回 964176192，其二进制表示形式为 00111001011110000010100101000000。
 * 示例 2：
 * <p>
 * 输入：11111111111111111111111111111101
 * 输出：10111111111111111111111111111111
 * 解释：输入的二进制串 11111111111111111111111111111101 表示无符号整数 4294967293，
 * 因此返回 3221225471 其二进制表示形式为 10101111110010110010011101101001。
 */
public class _190 {
    public int reverseBits(int n) {
        int reverse = 0;
        for (int i = 31; i >= 0; i--) {
            //位运算，把最后一位向左移动31到达第一位。。。。。。
            reverse += ((n & 1) << i);
            n = n >> 1;
        }
        return reverse;
    }

    public static void main(String[] args) {
        _190 test = new _190();
        System.out.println(test.reverseBits(43261596));
    }
}
